#compdef _prep prep

help="--help[Show help for command]"

function _prep {
  local -a commands

  _arguments -C \
    $help \
    "--version[Show prep version]" \
    "1: :->cmnds" \
    "*::arg:->args"

  case $state in
    cmnds)
      commands=(
        "add:Add a card to the first box of the current deck"
        "add-box:Create a box in the current deck"
        "add-file:Add a card of type file"
        "archive:Archive a card"
        "boxes:List all boxes"
        "decks:List all decks"
        "edit:Edit card details"
        "move:Move a card to a specific box"
        "rate:Rate a card"
        "remove:Remove a card"
        "review:List cards to be reviewed"
        "show:Show a card"
        "unarchive:Unarchive a card"
        "use:Switch the current deck"
      )
      _describe "command" commands
      ;;
  esac

  case "$words[1]" in
    rate)
      _prep_rate
      ;;
    show)
      _prep_ids
      ;;
    archive)
      _prep_ids
      ;;
    add-file)
      _prep_add_file
      ;;
    remove)
      _prep_ids
      ;;
    archive)
      _prep_ids
      ;;
    unarchive)
      _prep_ids
      ;;
    add-box)
      _arguments \
      "--interval[interval in days or weeks of the box]"
      ;;
    use)
      _prep_use_deck
      ;;
  esac
}

function _prep_add_file {
  local -a ids

  _arguments  \
    $help \
    ":files:_files"
}

function _prep_use_deck {
  local -a ids

  _arguments -C \
    $help \
    "1: :->cmnds" \
    "*::arg:->args"

  case $state in
    cmnds)
      _ids=( ${(f)"$(prep decks | sed -E 's/^(  |\* )//g')"}  )
      _describe "command" _ids
      ;;
  esac
}

function _prep_rate {
  local -a commands

  _arguments -C \
    $help \
    "1: :->cmnds" \
    "*::arg:->args"

  case $state in
    cmnds)
      commands=(
        "bad:The card is moved to the first box"
        "again:The card is not moved"
        "good:The card is graduated to the next box"
        "easy:The card is moved into the last box"
      )
      _describe "command" commands
      ;;
  esac

  case "$words[1]" in
    bad | again | good | easy)
      _prep_ids
      ;;
  esac
}

function _prep_ids {
  local -a ids

  _arguments -C \
    $help \
    "1: :->cmnds" \
    "*::arg:->args"

  case $state in
    cmnds)
      _ids=( ${(f)"$(prep zshids)"} )
      _describe "command" _ids
      ;;
  esac
}
