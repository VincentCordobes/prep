on:
  push:
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
  build:
    name: Upload Release Asset
    needs: create_release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
        include:
          - os: ubuntu-latest
            os_name: linux
          - os: macos-latest
            os_name: macos
        ocaml-compiler:
          - 4.13.x
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
      - name: Build project 
        run: |
          opam pin add prep.dev -n .
          opam depext -yt prep
          opam install -t . --deps-only --yes
          opam exec -- dune build @install
          mv ./_build/default/bin/main.exe ./prep
          tar -zcvf prep.tar.gz ./prep
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./prep.tar.gz
          asset_name: prep-${{ matrix.os_name }}.tar.gz
          asset_content_type: application/gzip
